/* 
 * ProcessMaker API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@processmaker.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using ProcessMakerSDK.Client;
using ProcessMakerSDK.Api;
using ProcessMakerSDK.Model;

namespace ProcessMakerSDK.Test
{
    /// <summary>
    ///  Class for testing TaskAssignmentsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class TaskAssignmentsApiTests
    {
        private TaskAssignmentsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new TaskAssignmentsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of TaskAssignmentsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOf' TaskAssignmentsApi
            //Assert.IsInstanceOf(typeof(TaskAssignmentsApi), instance);
        }

        
        /// <summary>
        /// Test CreateTaskAssignments
        /// </summary>
        [Test]
        public void CreateTaskAssignmentsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TaskAssignmentsEditable taskAssignmentsEditable = null;
            //var response = instance.CreateTaskAssignments(taskAssignmentsEditable);
            //Assert.IsInstanceOf(typeof(TaskAssignments), response, "response is TaskAssignments");
        }
        
        /// <summary>
        /// Test UpdateTaskAssignments
        /// </summary>
        [Test]
        public void UpdateTaskAssignmentsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string taskAssignmentsId = null;
            //TaskAssignmentsEditable taskAssignmentsEditable = null;
            //var response = instance.UpdateTaskAssignments(taskAssignmentsId, taskAssignmentsEditable);
            //Assert.IsInstanceOf(typeof(TaskAssignments), response, "response is TaskAssignments");
        }
        
    }

}
